knitr::opts_chunk$set(echo = TRUE)
df=read.csv("Chicago Police Stops Dataset.csv")
df
str(df)
summary(df)
colSums(is.na(df))
data=read.csv("Chicago Police Stops Dataset.csv")
data
str(data)
# Importing required libraries for the EDA.
library(ezids)
library(ggplot2)
xbalesummary(df)
xkablesummary(data, title = "Summary of Dataset")
colSums(is.na(dataset))
colSums(is.na(data))
#removing missing values
cleaned_data<-na.omit(data)
str(data)
#removing missing values
cleaned_data<-na.omit(data)
str(cleaned_data)
xkablesummary(cleaned_data)
xkablesummary(cleaned_data, title = "Summary of Cleaned Dataset")
nrow(cleaned_data)
colSums(is.na(cleaned_data))
nrow(cleaned_data)
colSums(is.na(cleaned_data))
knitr::opts_chunk$set(echo = TRUE)
arrest_race <- table(cleaned_data$subject_race, cleaned_data$arrest_made)
prop.table(arrest_race, 1)
barplot(prop.table(arrest_race, 1), beside=TRUE, col=c("lightblue", "red"), main="Proportion of Arrests by Race")
barplot(table(cleaned_data$subject_race), main="Distribution of Stops by Race", col="lightblue")
# Just an initial exploration
barplot(table(cleaned_data$subject_race), main="Distribution of Stops by Race", col="lightblue")
boxplot(cleaned_data$age ~ cleaned_data$subject_race, main="Age Distribution by Race")
colnames(cleaned_data)  # Check column names in the dataset
boxplot(cleaned_data$subject_age ~ cleaned_data$subject_race, main="Age Distribution by Race")
boxplot(cleaned_data$subject_age ~ cleaned_data$subject_race, main="Age Distribution by Race")
boxplot(cleaned_data$officer_age ~ cleaned_data$subject_race, main="Officer Age vs Subject Race")
boxplot(cleaned_data$officer_age ~ cleaned_data$subject_race, main="Officer Age vs Subject Race")
clean_subject_age=outlierKD2(clean_dataset,subject_age,rm=TRUE,qqplt = TRUE)
library(ezids)
clean_subject_age=outlierKD2(clean_dataset,subject_age,rm=TRUE,qqplt = TRUE)
clean_subject_age=outlierKD2(cleaned_data,subject_age,rm=TRUE,qqplt = TRUE)
cleansubject_age=outlierKD2(cleaned_data,subject_age,rm=TRUE,qqplt = TRUE)
cleanofficer_age=outlierKD2(cleaned_data,officer_age,rm=TRUE,qqplt = TRUE)
cleanofficer_age=outlierKD2(cleaned_data,officer_age,rm=TRUE,qqplt = TRUE)
# updating the cleaned data for the subject_age column
cleaned_data$subject_age <- cleansubject_age
# Similarly for officer_age
cleaned_data$officer_age <- cleanofficer_age
nrow(cleaned_data)
length(cleaned_data$subject_age)  # Total number of rows in 'subject_age' column
```{r}
boxplot(cleaned_data$subject_age ~ cleaned_data$subject_race, main="Age Distribution by Race")
boxplot(cleaned_data$subject_age ~ cleaned_data$subject_race, main="Age Distribution by Race")
str(cleansubject_age)  # Check the structure of cleansubject_age
str(cleanofficer_age)  # Check the structure of cleanofficer_age
str(cleaned_data)
# Check if the columns are dataframes
str(cleaned_data$subject_age)
str(cleaned_data$officer_age)
# If they are nested dataframes, extract the numeric values:
cleaned_data$subject_age <- cleaned_data$subject_age$subject_age
cleaned_data$officer_age <- cleaned_data$officer_age$officer_age
# If they are nested dataframes, extract the numeric values:
cleaned_data$subject_age <- cleaned_data$subject_age$subject_age
# Check if the columns are dataframes
str(cleaned_data$subject_age)
str(cleaned_data$officer_age)
# If they are nested dataframes, extract the numeric values:
cleaned_data$subject_age <- cleaned_data$subject_age$subject_age
cleansubject_age=outlierKD2(cleaned_data,subject_age,rm=TRUE,qqplt = TRUE)
cleanofficer_age=outlierKD2(cleaned_data,officer_age,rm=TRUE,qqplt = TRUE)
# Extract the original values from the nested dataframe
cleaned_data$subject_age <- cleansubject_age$subject_age
cleaned_data$officer_age <- cleanofficer_age$officer_age
str(Cleaned_data)
str(cleaned_data)
str(cleaned_data)
cleansubject_age=outlierKD2(cleaned_data,subject_age,rm=TRUE,qqplt = TRUE)
boxplot(cleaned_data$subject_age ~ cleaned_data$subject_race, main="Age Distribution by Race")
knitr::opts_chunk$set(echo = TRUE)
# Importing required libraries for the EDA.
library(ezids)
library(ggplot2)
data=read.csv("Chicago Police Stops Dataset.csv")
data
str(data)
xkablesummary(data, title = "Summary of Dataset")
colSums(is.na(data))
#removing missing values
cleaned_data<-na.omit(data)
str(cleaned_data)
xkablesummary(cleaned_data, title = "Summary of Cleaned Dataset")
colSums(is.na(cleaned_data))
# Just an initial exploration
barplot(table(cleaned_data$subject_race), main="Distribution of Stops by Race", col="lightblue")
boxplot(cleaned_data$subject_age ~ cleaned_data$subject_race, main="Age Distribution by Race")
boxplot(cleaned_data$officer_age ~ cleaned_data$subject_race, main="Officer Age vs Subject Race")
boxplot(cleaned_data$officer_age ~ cleaned_data$subject_race, main="Officer Age vs Subject Race")
cleansubject_age=outlierKD2(cleaned_data,subject_age,rm=TRUE,qqplt = TRUE)
cleanofficer_age=outlierKD2(cleaned_data,officer_age,rm=TRUE,qqplt = TRUE)
str(cleaned_data)
# Removing outliers from subject_age using IQR
Q1_subject <- quantile(cleaned_data$subject_age, 0.25)
Q3_subject <- quantile(cleaned_data$subject_age, 0.75)
IQR_subject <- Q3_subject - Q1_subject
# Define lower and upper bounds for subject_age
lower_bound_subject <- Q1_subject - 1.5 * IQR_subject
upper_bound_subject <- Q3_subject + 1.5 * IQR_subject
# Filter out rows with outliers in subject_age
cleaned_data <- cleaned_data[cleaned_data$subject_age >= lower_bound_subject & cleaned_data$subject_age <= upper_bound_subject, ]
# Removing outliers from officer_age using IQR
Q1_officer <- quantile(cleaned_data$officer_age, 0.25)
Q3_officer <- quantile(cleaned_data$officer_age, 0.75)
IQR_officer <- Q3_officer - Q1_officer
# Define lower and upper bounds for officer_age
lower_bound_officer <- Q1_officer - 1.5 * IQR_officer
upper_bound_officer <- Q3_officer + 1.5 * IQR_officer
# Filter out rows with outliers in officer_age
cleaned_data <- cleaned_data[cleaned_data$officer_age >= lower_bound_officer & cleaned_data$officer_age <= upper_bound_officer, ]
nrow(cleaned_data)
summary(cleaned_data$subject_age)
summary(cleaned_data$officer_age)
summary(cleaned_data$subject_age)
summary(cleaned_data$officer_age)
str(cleaned_data)
# Removing outliers from subject_age using IQR
Q1_subject <- quantile(cleaned_data$subject_age, 0.25)
Q3_subject <- quantile(cleaned_data$subject_age, 0.75)
IQR_subject <- Q3_subject - Q1_subject
# Define lower and upper bounds for subject_age
lower_bound_subject <- Q1_subject - 1.5 * IQR_subject
upper_bound_subject <- Q3_subject + 1.5 * IQR_subject
# Filter out rows with outliers in subject_age
cleaned_data <- cleaned_data[cleaned_data$subject_age >= lower_bound_subject & cleaned_data$subject_age <= upper_bound_subject, ]
# Removing outliers from officer_age using IQR
Q1_officer <- quantile(cleaned_data$officer_age, 0.25)
Q3_officer <- quantile(cleaned_data$officer_age, 0.75)
IQR_officer <- Q3_officer - Q1_officer
# Define lower and upper bounds for officer_age
lower_bound_officer <- Q1_officer - 1.5 * IQR_officer
upper_bound_officer <- Q3_officer + 1.5 * IQR_officer
# Filter out rows with outliers in officer_age
cleaned_data <- cleaned_data[cleaned_data$officer_age >= lower_bound_officer & cleaned_data$officer_age <= upper_bound_officer, ]
nrow(cleaned_data)
summary(cleaned_data$subject_age)
summary(cleaned_data$officer_age)
str(cleaned_data)
dataset$subject_race <- as.numeric(factor(dataset$subject_race))
